{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","map","article","list","key","className","to","substring","ArtilesListPage","articleContent","NortFoundPage","CommentsList","comments","comment","username","text","UpvoteSection","artilceName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","articleName","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","otherArticles","filter","articleInfo","useEffect","console","log","fecthData","paragraph","NotFoundPage","Navbar","App","path","component","exact","ArticlesListPage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57d95434.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage =()=>(\r\n\r\n\r\n <>\r\n<h1>Wellcome to the Home Page in a  fragment</h1>\r\n<p>\r\nWellcome to this wonderful; blog\r\n\r\n\r\n</p>\r\n</>\r\n\r\n)\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nconst AboutPage=()=>(\r\n\r\n<>\r\n<h1>About Page</h1>\r\n<p>Welcome to About Page</p>\r\n\r\n</>\r\n\r\n)\r\n\r\nexport default AboutPage","const articles=[\r\n    \r\n    {\r\n\r\nname:'learn-react',\r\ntitle:'The fastes way to learn..',\r\ncontent:[\r\n'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor',\r\n' incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud ',\r\n'exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure',\r\n' dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.',\r\n' Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit ',\r\n'anim id est laborum.'\r\n\r\n]\r\n\r\n    },\r\n\r\n    {\r\n        name:'learn-node',\r\n        title:'The powerful jounrey I took to reach my dream',\r\n        content:[\r\n            'Content is currently on the way',\r\n            'I am actually working on it day by day'\r\n        ]\r\n\r\n\r\n    },\r\n\r\n    {\r\n        name:'learn-life',\r\n        title:'The things I learned while coding',\r\n        content:[\r\n            'Acceptance and patience',\r\n            'I can do everything I can'\r\n        ]\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n]\r\n\r\nexport default articles","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ArticlesList =({articles})=>(\r\n\r\n   <>\r\n     {articles.map((article, list)=>(\r\n<Link  key={list} className='article-list-item'  to={`/article/${article.name}`}>\r\n     <h3>{article.title}</h3>\r\n<p>\r\n    {article.content[0].substring(0-15)}...\r\n</p>\r\n</Link>\r\n     ))}\r\n   </>\r\n    \r\n\r\n)\r\n\r\nexport default  ArticlesList","import React from 'react'\r\nimport articleContent from './article-content'\r\nimport ArticlesList from'../components/ArticlesList'\r\nconst ArtilesListPage =()=>(\r\n\r\n<>\r\n<h1>Articles List</h1>\r\n<ArticlesList articles={articleContent}/>\r\n</>\r\n\r\n)\r\n\r\nexport default ArtilesListPage","import React from 'react'\r\n\r\n\r\nconst NortFoundPage=()=>(\r\n<h1>404: Page not found...:~/</h1>\r\n\r\n)\r\n\r\nexport  default NortFoundPage","import React from'react'\r\n\r\nconst CommentsList=({comments})=>(\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key)=>(\r\n\r\n        <div className=\"comment\" key={key}>\r\n            <h4>{comment.username}</h4>\r\n            <p>{comment.text}</p>\r\n    \r\n    \r\n        </div>\r\n    ))\r\n    }\r\n    </>\r\n)\r\n\r\nexport default CommentsList\r\n","import React from 'react'\r\n\r\nconst UpvoteSection=({artilceName, upvotes, setArticleInfo})=>{\r\n\r\n    const upvoteArticle= async()=>{ \r\n        const result =await fetch(`/api/articles/${artilceName}/upvote`,\r\n    {\r\n        method: 'post'\r\n    })\r\n\r\n    const body=await result.json()\r\n    setArticleInfo(body)\r\n}\r\nreturn(\r\n<div id='upvote-section'>\r\n<button onClick={()=>upvoteArticle()}>Add Upvote</button>\r\n<p>This post has been upvoted {upvotes}  times</p>\r\n</div>)\r\n\r\n}\r\n\r\n\r\nexport default UpvoteSection","import React, { useState } from 'react';\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name:\r\n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </label>\r\n            <label>\r\n                Comment:\r\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n            </label>\r\n            <button onClick={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCommentForm;","import React, {useState, useEffect}from 'react'\r\nimport articleContent from './article-content'\r\nimport ArticlesList from '../components/ArticlesList'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport CommentsList from '../components/CommentsList'\r\nimport UpvoteSection from '../components/UpvoteSection'\r\nimport AddCommentForm from '../components/AddCommentForm'\r\n\r\n\r\nconst ArticlePage=({match})=>{\r\n\r\nconst name= match.params.name   //name from router settings  :name at app.js\r\nconst article=articleContent.find(article=>article.name===name)//name as in typed intot the browser after/\r\nconst otherArticles = articleContent.filter(article=>article.name!==name) //filtering articles with name not equals to the name prop\r\nconst[articleInfo, setArticleInfo]= useState({upvotes:0, comments:[]})\r\n\r\nuseEffect(()=>{\r\n\r\n       const fecthData=async () =>{\r\n        const result = await fetch(`/api/articles/${name}`)\r\n        const body =  await result.json()\r\n       \r\n        console.log('Body',body) \r\n        setArticleInfo(body)\r\n    }\r\n\r\n    fecthData()\r\n  \r\n   // setArticleInfo({upvotes: Math.ceil(Math.random()*10)})\r\n},[name])//pasisng name to useEffect wich comes from the url article name from match.params.name\r\n//will result in changing the commented code Match.ceil*(...) every time a new url name is passed aka name is changed\r\n\r\nif(!article){return(<NotFoundPage/>)}\r\nconsole.log('NAME', name)\r\n\r\n   return(\r\n<>\r\n    <h1> {article.title}</h1>\r\n  <UpvoteSection artilceName={name}  upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\r\n\r\n    <p>Welcome to the  {article.title} page</p>\r\n    {article.content.map((paragraph, key)=>(\r\n        <p key={key}>{paragraph}</p>\r\n    ))}\r\n\r\n    <CommentsList comments={articleInfo.comments}/>\r\n    <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\r\n    <h3>Other Articles:</h3>\r\n<ArticlesList articles={otherArticles}/>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default ArticlePage","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/articles-list\">Artciles</Link>\r\n      </li>\r\n      \r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from 'react';\n\nimport './App.css';\nimport HomePage from './pages/HomePage'\nimport AboutPage from './pages/AboutPage'\nimport ArticlesListPage from './pages/ArticlesListPage'\nimport ArticlePage from './pages/ArticlePage'\nimport Navbar from './Navbar'\nimport NotFoundPage from './pages/NotFoundPage'\nimport{\n  BrowserRouter as Router,\n  Route,\n  Switch,\n}from 'react-router-dom'\nimport NortFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar/>\n      <div id='page-body'>\n        <Switch>\n      <Route  path='/' component={HomePage} exact/>\n      <Route  path='/about' component={AboutPage} />\n      <Route path='/articles-list'  component={ArticlesListPage}/>\n      <Route path='/article/:name'  component={ArticlePage}/>\n      <Route  component={NotFoundPage}/> //by dfault it will always match if no path provided\n      </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}